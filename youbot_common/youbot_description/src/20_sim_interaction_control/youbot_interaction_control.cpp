/**********************************************************
 * This file is generated by 20-sim C++ Code Generator
 *
 *  file:  youbot_interaction_control.cpp
 *  subm:  youbot_interaction_control
 *  model: youBot_control_gazebo
 *  expmt: youBot_control_gazebo
 *  date:  April 20, 2011
 *  time:  12:30:15 pm
 *  user:  Campuslicentie
 *  from:  Universiteit Twente
 *  build: 4.1.2.2
 **********************************************************/

/* Standard include files */
#include <stdio.h>
#include <math.h>
#include <stdexcept>

/* 20-sim include files */
#include "youbot_interaction_control.h"

	/* this PRIVATE function sets the input variables from the input vector */
void youbot_interaction_control::CopyInputsToVariables (XXDouble *u)
{
	/* copy the input vector to the input variables */
	m_V[549] = u[0];		/* input */
	m_V[550] = u[1];
	m_V[551] = u[2];
	m_V[552] = u[3];
	m_V[553] = u[4];
	m_V[554] = u[5];
	m_V[555] = u[6];
	m_V[556] = u[7];
	m_V[541] = u[8];		/* p.f */
	m_V[542] = u[9];
	m_V[543] = u[10];
	m_V[544] = u[11];
	m_V[545] = u[12];
	m_V[546] = u[13];
	m_V[547] = u[14];
	m_V[548] = u[15];
	m_V[557] = u[16];		/* xyzrpy */
	m_V[558] = u[17];
	m_V[559] = u[18];
	m_V[560] = u[19];
	m_V[561] = u[20];
	m_V[562] = u[21];

}

/* this PRIVATE function uses the output variables to fill the output vector */
void youbot_interaction_control::CopyVariablesToOutputs (XXDouble *y)
{
	/* copy the output variables to the output vector */
	y[0] = 	m_V[563];		/* output */
	y[1] = 	m_V[564];
	y[2] = 	m_V[565];
	y[3] = 	m_V[566];
	y[4] = 	m_V[567];
	y[5] = 	m_V[568];
	y[6] = 	m_V[569];
	y[7] = 	m_V[570];
	y[8] = 	m_V[571];
	y[9] = 	m_V[572];
	y[10] = 	m_V[573];
	y[11] = 	m_V[574];
	y[12] = 	m_V[575];
	y[13] = 	m_V[576];
	y[14] = 	m_V[577];
	y[15] = 	m_V[578];
	y[16] = 	m_V[533];		/* p.e */
	y[17] = 	m_V[534];
	y[18] = 	m_V[535];
	y[19] = 	m_V[536];
	y[20] = 	m_V[537];
	y[21] = 	m_V[538];
	y[22] = 	m_V[539];
	y[23] = 	m_V[540];

}

youbot_interaction_control::youbot_interaction_control(void)
{
	m_start_time = 0.0;
	m_finish_time = 30.0;
	m_step_size = 0.01;
	m_time = 0;
	m_major = true;

	m_number_constants = 24;
	m_number_parameters = 42;
	m_number_initialvalues = 3;
	m_number_variables = 579;
	m_number_states = 3;
	m_number_rates = 3;
	m_number_matrices = 121;
	m_number_unnamed = 539;

	/* the variable arrays */
	m_C = new XXDouble[24 + 1];		/* constants */
	m_P = new XXDouble[42 + 1];		/* parameters */
	m_I = new XXDouble[3 + 1];		/* initial values */
	m_V = new XXDouble[579 + 1];		/* variables */
	m_s = new XXDouble[3 + 1];		/* states */
	m_R = new XXDouble[3 + 1];		/* rates (or new states) */
	m_M = new XXMatrix[121 + 1];		/* matrices */
	m_U = new XXDouble[539 + 1];		/* unnamed */
	m_workarray = new XXDouble[156 + 1];

	myintegmethod.Initialize(this);

	state = initialrun;
}

youbot_interaction_control::~youbot_interaction_control(void)
{
	/* free memory */
	delete[] m_C;
	delete[] m_P;
	delete[] m_I;
	delete[] m_V;
	delete[] m_s;
	delete[] m_R;
	delete[] m_M;
	delete[] m_U;
	delete[] m_workarray;
}

/* the initialization function for submodel */
void youbot_interaction_control::Initialize (XXDouble *u, XXDouble *y, XXDouble t)
{
	/* initialization phase (allocating memory) */
	m_initialize = true;

	/* copy the inputs */
	m_time = t;

	/* set the constants */
	m_C[0] = 1.0;		/* CalculateJ\vx */
	m_C[1] = 0.0;		
	m_C[2] = 0.0;		
	m_C[3] = 0.0;		/* CalculateJ\vy */
	m_C[4] = 1.0;		
	m_C[5] = 0.0;		
	m_C[6] = 0.0;		/* CalculateJ\omegaz */
	m_C[7] = 0.0;		
	m_C[8] = 1.0;		
	m_C[9] = 0.0;		/* CalculateJ\omega1 */
	m_C[10] = 0.0;		
	m_C[11] = -1.0;		
	m_C[12] = 0.0;		/* CalculateJ\omega2 */
	m_C[13] = 1.0;		
	m_C[14] = 0.0;		
	m_C[15] = 0.0;		/* CalculateJ\omega3 */
	m_C[16] = -1.0;		
	m_C[17] = 0.0;		
	m_C[18] = 0.0;		/* CalculateJ\omega4 */
	m_C[19] = 1.0;		
	m_C[20] = 0.0;		
	m_C[21] = 0.0;		/* CalculateJ\omega5 */
	m_C[22] = 0.0;		
	m_C[23] = -1.0;		


	/* set the parameters */
	m_P[0] = 0.1;		/* C\c */
	m_P[1] = 1.0;		/* CalculateJ\InitialJointPos */
	m_P[2] = 1.0;		
	m_P[3] = 1.0;		
	m_P[4] = 1.0;		
	m_P[5] = 1.0;		
	m_P[6] = 0.024;		/* CalculateJ\Linkdim */
	m_P[7] = 0.033;		
	m_P[8] = 0.0;		
	m_P[9] = 0.0;		
	m_P[10] = 0.0;		
	m_P[11] = 0.0;		
	m_P[12] = 0.0;		
	m_P[13] = 0.0;		
	m_P[14] = 0.0;		
	m_P[15] = 0.0;		
	m_P[16] = 0.0;		
	m_P[17] = 0.0;		
	m_P[18] = 0.096;		
	m_P[19] = 0.019;		
	m_P[20] = 0.155;		
	m_P[21] = 0.135;		
	m_P[22] = 0.096;		
	m_P[23] = 0.034;		
	m_P[24] = 1.0;		/* CalculateJ\InitialBasePos */
	m_P[25] = 0.0;		
	m_P[26] = 0.0;		
	m_P[27] = 1.0;		
	m_P[28] = 0.0;		
	m_P[29] = 1.0;		
	m_P[30] = 0.0;		
	m_P[31] = 0.0;		
	m_P[32] = 0.0;		
	m_P[33] = 0.0;		
	m_P[34] = 1.0;		
	m_P[35] = 0.0;		
	m_P[36] = 0.0;		
	m_P[37] = 0.0;		
	m_P[38] = 0.0;		
	m_P[39] = 1.0;		
	m_P[40] = 0.001;		/* CtipControl\CtipControl */
	m_P[41] = 1.0;		/* R\r */


	/* set the states */
	m_s[0] = m_I[0];		/* C\x */
	m_s[1] = m_I[1];
	m_s[2] = m_I[2];


	/* set the matrices */
	m_M[0].mat = &m_V[0];		/* C\p.e */
	m_M[0].rows = 8;
	m_M[0].columns = 1;
	m_M[1].mat = &m_V[8];		/* CalculateJ\controllableJ */
	m_M[1].rows = 6;
	m_M[1].columns = 8;
	m_M[2].mat = &m_V[56];		/* CalculateJ\Htip0 */
	m_M[2].rows = 4;
	m_M[2].columns = 4;
	m_M[3].mat = &m_P[1];		/* CalculateJ\InitialJointPos */
	m_M[3].rows = 5;
	m_M[3].columns = 1;
	m_M[4].mat = &m_P[6];		/* CalculateJ\Linkdim */
	m_M[4].rows = 3;
	m_M[4].columns = 6;
	m_M[5].mat = &m_P[24];		/* CalculateJ\InitialBasePos */
	m_M[5].rows = 4;
	m_M[5].columns = 4;
	m_M[6].mat = &m_C[0];		/* CalculateJ\vx */
	m_M[6].rows = 3;
	m_M[6].columns = 1;
	m_M[7].mat = &m_C[3];		/* CalculateJ\vy */
	m_M[7].rows = 3;
	m_M[7].columns = 1;
	m_M[8].mat = &m_C[6];		/* CalculateJ\omegaz */
	m_M[8].rows = 3;
	m_M[8].columns = 1;
	m_M[9].mat = &m_C[9];		/* CalculateJ\omega1 */
	m_M[9].rows = 3;
	m_M[9].columns = 1;
	m_M[10].mat = &m_C[12];		/* CalculateJ\omega2 */
	m_M[10].rows = 3;
	m_M[10].columns = 1;
	m_M[11].mat = &m_C[15];		/* CalculateJ\omega3 */
	m_M[11].rows = 3;
	m_M[11].columns = 1;
	m_M[12].mat = &m_C[18];		/* CalculateJ\omega4 */
	m_M[12].rows = 3;
	m_M[12].columns = 1;
	m_M[13].mat = &m_C[21];		/* CalculateJ\omega5 */
	m_M[13].rows = 3;
	m_M[13].columns = 1;
	m_M[14].mat = &m_V[72];		/* CalculateJ\uTrzrefref */
	m_M[14].rows = 6;
	m_M[14].columns = 1;
	m_M[15].mat = &m_V[78];		/* CalculateJ\uTryrefref */
	m_M[15].rows = 6;
	m_M[15].columns = 1;
	m_M[16].mat = &m_V[84];		/* CalculateJ\uTrxrefref */
	m_M[16].rows = 6;
	m_M[16].columns = 1;
	m_M[17].mat = &m_V[90];		/* CalculateJ\uTr1refref */
	m_M[17].rows = 6;
	m_M[17].columns = 1;
	m_M[18].mat = &m_V[96];		/* CalculateJ\uTr211 */
	m_M[18].rows = 6;
	m_M[18].columns = 1;
	m_M[19].mat = &m_V[102];		/* CalculateJ\uTr322 */
	m_M[19].rows = 6;
	m_M[19].columns = 1;
	m_M[20].mat = &m_V[108];		/* CalculateJ\uTr433 */
	m_M[20].rows = 6;
	m_M[20].columns = 1;
	m_M[21].mat = &m_V[114];		/* CalculateJ\uTr544 */
	m_M[21].rows = 6;
	m_M[21].columns = 1;
	m_M[22].mat = &m_V[120];		/* CalculateJ\R1ref */
	m_M[22].rows = 3;
	m_M[22].columns = 3;
	m_M[23].mat = &m_V[129];		/* CalculateJ\R21 */
	m_M[23].rows = 3;
	m_M[23].columns = 3;
	m_M[24].mat = &m_V[138];		/* CalculateJ\R32 */
	m_M[24].rows = 3;
	m_M[24].columns = 3;
	m_M[25].mat = &m_V[147];		/* CalculateJ\R43 */
	m_M[25].rows = 3;
	m_M[25].columns = 3;
	m_M[26].mat = &m_V[156];		/* CalculateJ\R54 */
	m_M[26].rows = 3;
	m_M[26].columns = 3;
	m_M[27].mat = &m_V[165];		/* CalculateJ\Rtip5 */
	m_M[27].rows = 3;
	m_M[27].columns = 3;
	m_M[28].mat = &m_V[174];		/* CalculateJ\p1ref */
	m_M[28].rows = 3;
	m_M[28].columns = 1;
	m_M[29].mat = &m_V[177];		/* CalculateJ\p21 */
	m_M[29].rows = 3;
	m_M[29].columns = 1;
	m_M[30].mat = &m_V[180];		/* CalculateJ\p32 */
	m_M[30].rows = 3;
	m_M[30].columns = 1;
	m_M[31].mat = &m_V[183];		/* CalculateJ\p43 */
	m_M[31].rows = 3;
	m_M[31].columns = 1;
	m_M[32].mat = &m_V[186];		/* CalculateJ\p54 */
	m_M[32].rows = 3;
	m_M[32].columns = 1;
	m_M[33].mat = &m_V[189];		/* CalculateJ\ptip5 */
	m_M[33].rows = 3;
	m_M[33].columns = 1;
	m_M[34].mat = &m_V[192];		/* CalculateJ\Href0 */
	m_M[34].rows = 4;
	m_M[34].columns = 4;
	m_M[35].mat = &m_V[208];		/* CalculateJ\H1ref */
	m_M[35].rows = 4;
	m_M[35].columns = 4;
	m_M[36].mat = &m_V[224];		/* CalculateJ\H21 */
	m_M[36].rows = 4;
	m_M[36].columns = 4;
	m_M[37].mat = &m_V[240];		/* CalculateJ\H32 */
	m_M[37].rows = 4;
	m_M[37].columns = 4;
	m_M[38].mat = &m_V[256];		/* CalculateJ\H43 */
	m_M[38].rows = 4;
	m_M[38].columns = 4;
	m_M[39].mat = &m_V[272];		/* CalculateJ\H54 */
	m_M[39].rows = 4;
	m_M[39].columns = 4;
	m_M[40].mat = &m_V[288];		/* CalculateJ\Htip5 */
	m_M[40].rows = 4;
	m_M[40].columns = 4;
	m_M[41].mat = &m_V[304];		/* CalculateJ\H10 */
	m_M[41].rows = 4;
	m_M[41].columns = 4;
	m_M[42].mat = &m_V[320];		/* CalculateJ\H20 */
	m_M[42].rows = 4;
	m_M[42].columns = 4;
	m_M[43].mat = &m_V[336];		/* CalculateJ\H30 */
	m_M[43].rows = 4;
	m_M[43].columns = 4;
	m_M[44].mat = &m_V[352];		/* CalculateJ\H40 */
	m_M[44].rows = 4;
	m_M[44].columns = 4;
	m_M[45].mat = &m_V[368];		/* CalculateJ\H50 */
	m_M[45].rows = 4;
	m_M[45].columns = 4;
	m_M[46].mat = &m_V[384];		/* CalculateJ\initialq */
	m_M[46].rows = 8;
	m_M[46].columns = 1;
	m_M[47].mat = &m_V[392];		/* ControllableJ\joints.e */
	m_M[47].rows = 8;
	m_M[47].columns = 1;
	m_M[48].mat = &m_V[400];		/* ControllableJ\tip.f */
	m_M[48].rows = 6;
	m_M[48].columns = 1;
	m_M[49].mat = &m_V[406];		/* CtipControl\p.e */
	m_M[49].rows = 6;
	m_M[49].columns = 1;
	m_M[50].mat = &m_V[412];		/* CtipControl\state */
	m_M[50].rows = 4;
	m_M[50].columns = 4;
	m_M[51].mat = &m_V[429];		/* CtipControl\omega */
	m_M[51].rows = 3;
	m_M[51].columns = 1;
	m_M[52].mat = &m_V[432];		/* CtipControl\Wr */
	m_M[52].rows = 6;
	m_M[52].columns = 1;
	m_M[53].mat = &m_V[438];		/* CtipControl\Wt */
	m_M[53].rows = 6;
	m_M[53].columns = 1;
	m_M[54].mat = &m_V[446];		/* Gain\xyzrpy */
	m_M[54].rows = 6;
	m_M[54].columns = 1;
	m_M[55].mat = &m_V[452];		/* Gain\H */
	m_M[55].rows = 4;
	m_M[55].columns = 4;
	m_M[56].mat = &m_V[468];		/* Gain\Rz */
	m_M[56].rows = 3;
	m_M[56].columns = 3;
	m_M[57].mat = &m_V[477];		/* Gain\Ry */
	m_M[57].rows = 3;
	m_M[57].columns = 3;
	m_M[58].mat = &m_V[486];		/* Gain\Rx */
	m_M[58].rows = 3;
	m_M[58].columns = 3;
	m_M[59].mat = &m_V[495];		/* OneJunction\p2.e */
	m_M[59].rows = 6;
	m_M[59].columns = 1;
	m_M[60].mat = &m_V[501];		/* OneJunction2\p4.e */
	m_M[60].rows = 8;
	m_M[60].columns = 1;
	m_M[61].mat = &m_V[509];		/* OneJunction2\p4.f */
	m_M[61].rows = 8;
	m_M[61].columns = 1;
	m_M[62].mat = &m_V[517];		/* R\p.e */
	m_M[62].rows = 8;
	m_M[62].columns = 1;
	m_M[63].mat = &m_V[525];		/* Splitter1\input */
	m_M[63].rows = 8;
	m_M[63].columns = 1;
	m_M[64].mat = &m_V[533];		/* p.e */
	m_M[64].rows = 8;
	m_M[64].columns = 1;
	m_M[65].mat = &m_V[541];		/* p.f */
	m_M[65].rows = 8;
	m_M[65].columns = 1;
	m_M[66].mat = &m_V[549];		/* input */
	m_M[66].rows = 8;
	m_M[66].columns = 1;
	m_M[67].mat = &m_V[557];		/* xyzrpy */
	m_M[67].rows = 6;
	m_M[67].columns = 1;
	m_M[68].mat = &m_V[563];		/* output */
	m_M[68].rows = 4;
	m_M[68].columns = 4;
	m_M[69].mat = &m_R[0];		/* C\x_dot */
	m_M[69].rows = 3;
	m_M[69].columns = 1;
	m_M[70].mat = &m_s[0];		/* C\x */
	m_M[70].rows = 3;
	m_M[70].columns = 1;
	m_M[71].mat = &m_I[0];		/* C\x_initial */
	m_M[71].rows = 3;
	m_M[71].columns = 1;
	m_M[72].mat = &m_U[0];		/* m_U1 */
	m_M[72].rows = 3;
	m_M[72].columns = 1;
	m_M[73].mat = &m_U[3];		/* m_U2 */
	m_M[73].rows = 3;
	m_M[73].columns = 3;
	m_M[74].mat = &m_U[12];		/* m_U3 */
	m_M[74].rows = 3;
	m_M[74].columns = 1;
	m_M[75].mat = &m_U[15];		/* m_U4 */
	m_M[75].rows = 3;
	m_M[75].columns = 1;
	m_M[76].mat = &m_U[18];		/* m_U5 */
	m_M[76].rows = 3;
	m_M[76].columns = 3;
	m_M[77].mat = &m_U[27];		/* m_U6 */
	m_M[77].rows = 3;
	m_M[77].columns = 1;
	m_M[78].mat = &m_U[30];		/* m_U7 */
	m_M[78].rows = 3;
	m_M[78].columns = 1;
	m_M[79].mat = &m_U[33];		/* m_U8 */
	m_M[79].rows = 3;
	m_M[79].columns = 3;
	m_M[80].mat = &m_U[42];		/* m_U9 */
	m_M[80].rows = 3;
	m_M[80].columns = 1;
	m_M[81].mat = &m_U[45];		/* m_U10 */
	m_M[81].rows = 3;
	m_M[81].columns = 1;
	m_M[82].mat = &m_U[48];		/* m_U11 */
	m_M[82].rows = 3;
	m_M[82].columns = 3;
	m_M[83].mat = &m_U[57];		/* m_U12 */
	m_M[83].rows = 3;
	m_M[83].columns = 1;
	m_M[84].mat = &m_U[60];		/* m_U13 */
	m_M[84].rows = 3;
	m_M[84].columns = 1;
	m_M[85].mat = &m_U[63];		/* m_U14 */
	m_M[85].rows = 3;
	m_M[85].columns = 3;
	m_M[86].mat = &m_U[72];		/* m_U15 */
	m_M[86].rows = 3;
	m_M[86].columns = 1;
	m_M[87].mat = &m_U[75];		/* m_U16 */
	m_M[87].rows = 3;
	m_M[87].columns = 1;
	m_M[88].mat = &m_U[78];		/* m_U17 */
	m_M[88].rows = 6;
	m_M[88].columns = 1;
	m_M[89].mat = &m_U[84];		/* m_U18 */
	m_M[89].rows = 6;
	m_M[89].columns = 6;
	m_M[90].mat = &m_U[120];		/* m_U19 */
	m_M[90].rows = 3;
	m_M[90].columns = 3;
	m_M[91].mat = &m_U[129];		/* m_U20 */
	m_M[91].rows = 3;
	m_M[91].columns = 3;
	m_M[92].mat = &m_U[138];		/* m_U21 */
	m_M[92].rows = 3;
	m_M[92].columns = 1;
	m_M[93].mat = &m_U[141];		/* m_U22 */
	m_M[93].rows = 5;
	m_M[93].columns = 1;
	m_M[94].mat = &m_U[146];		/* m_U23 */
	m_M[94].rows = 5;
	m_M[94].columns = 1;
	m_M[95].mat = &m_U[151];		/* m_U24 */
	m_M[95].rows = 6;
	m_M[95].columns = 1;
	m_M[96].mat = &m_U[157];		/* m_U25 */
	m_M[96].rows = 6;
	m_M[96].columns = 6;
	m_M[97].mat = &m_U[193];		/* m_U26 */
	m_M[97].rows = 6;
	m_M[97].columns = 1;
	m_M[98].mat = &m_U[199];		/* m_U27 */
	m_M[98].rows = 6;
	m_M[98].columns = 6;
	m_M[99].mat = &m_U[235];		/* m_U28 */
	m_M[99].rows = 6;
	m_M[99].columns = 1;
	m_M[100].mat = &m_U[241];		/* m_U29 */
	m_M[100].rows = 6;
	m_M[100].columns = 6;
	m_M[101].mat = &m_U[277];		/* m_U30 */
	m_M[101].rows = 6;
	m_M[101].columns = 1;
	m_M[102].mat = &m_U[283];		/* m_U31 */
	m_M[102].rows = 6;
	m_M[102].columns = 6;
	m_M[103].mat = &m_U[319];		/* m_U32 */
	m_M[103].rows = 4;
	m_M[103].columns = 4;
	m_M[104].mat = &m_U[335];		/* m_U33 */
	m_M[104].rows = 1;
	m_M[104].columns = 1;
	m_M[105].mat = &m_U[336];		/* m_U34 */
	m_M[105].rows = 3;
	m_M[105].columns = 3;
	m_M[106].mat = &m_U[345];		/* m_U35 */
	m_M[106].rows = 1;
	m_M[106].columns = 1;
	m_M[107].mat = &m_U[346];		/* m_U36 */
	m_M[107].rows = 1;
	m_M[107].columns = 1;
	m_M[108].mat = &m_U[347];		/* m_U37 */
	m_M[108].rows = 3;
	m_M[108].columns = 1;
	m_M[109].mat = &m_U[350];		/* m_U38 */
	m_M[109].rows = 3;
	m_M[109].columns = 1;
	m_M[110].mat = &m_U[353];		/* m_U39 */
	m_M[110].rows = 3;
	m_M[110].columns = 1;
	m_M[111].mat = &m_U[356];		/* m_U40 */
	m_M[111].rows = 3;
	m_M[111].columns = 1;
	m_M[112].mat = &m_U[359];		/* m_U41 */
	m_M[112].rows = 3;
	m_M[112].columns = 1;
	m_M[113].mat = &m_U[362];		/* m_U42 */
	m_M[113].rows = 6;
	m_M[113].columns = 6;
	m_M[114].mat = &m_U[398];		/* m_U43 */
	m_M[114].rows = 6;
	m_M[114].columns = 6;
	m_M[115].mat = &m_U[434];		/* m_U44 */
	m_M[115].rows = 6;
	m_M[115].columns = 6;
	m_M[116].mat = &m_U[470];		/* m_U45 */
	m_M[116].rows = 6;
	m_M[116].columns = 1;
	m_M[117].mat = &m_U[476];		/* m_U46 */
	m_M[117].rows = 8;
	m_M[117].columns = 6;
	m_M[118].mat = &m_U[524];		/* m_U47 */
	m_M[118].rows = 8;
	m_M[118].columns = 1;
	m_M[119].mat = &m_U[532];		/* m_U48 */
	m_M[119].rows = 1;
	m_M[119].columns = 1;
	m_M[120].mat = &m_U[533];		/* m_U49 */
	m_M[120].rows = 1;
	m_M[120].columns = 6;


	/* calculate initial and static equations */
	CalculateInitial ();
	CalculateStatic ();

	/* end of initialization phase */
	m_initialize = false;

	state = initialrun;
}

/* the function that calculates the submodel */
void youbot_interaction_control::Calculate (XXDouble *u, XXDouble *y /*, XXDouble t*/)
{
	/* another precessor submodel could determine the parameters of this submodel
	   and therefore the static parameter calculations need to be performed. */
	CalculateStatic ();

	switch (state)
	{
		case initialrun:	/* calculate the model for the first time */
			CopyInputsToVariables (u);
			CalculateInput ();
			CalculateDynamic();
			CalculateOutput ();
			CopyVariablesToOutputs (y);
			state = mainrun;
			break;
		case mainrun:	/* calculate the model */

			
				CopyInputsToVariables (u);
				CalculateInput ();
				myintegmethod.Step();
				CalculateOutput ();
				CopyVariablesToOutputs (y);
			break;
		case finished:
			throw std::logic_error("The simulation was finished"); 
			break;
		default:
			throw std::logic_error("The simulation state machine is inconsistent"); 
			break;
	}
}

/* the termination function for submodel */
void youbot_interaction_control::Terminate (XXDouble *u, XXDouble *y /*, XXDouble t */)
{
	/* copy the inputs */
	CopyInputsToVariables (u);

	/* calculate the final model equations */
	CalculateFinal ();

	/* set the outputs */
	CopyVariablesToOutputs (y);
}


/* This function calculates the initial equations of the model.
 * These equations are calculated before anything else
 */
void youbot_interaction_control::CalculateInitial (void)
{
		/* CalculateJ\initialq = [0; 0; 0; CalculateJ\InitialJointPos[1]; CalculateJ\InitialJointPos[2]; CalculateJ\InitialJointPos[3]; CalculateJ\InitialJointPos[4]; CalculateJ\InitialJointPos[5]]; */
		m_M[46].mat[0] = 0.0;
		m_M[46].mat[1] = 0.0;
		m_M[46].mat[2] = 0.0;
		m_M[46].mat[3] = m_M[3].mat[0];
		m_M[46].mat[4] = m_M[3].mat[1];
		m_M[46].mat[5] = m_M[3].mat[2];
		m_M[46].mat[6] = m_M[3].mat[3];
		m_M[46].mat[7] = m_M[3].mat[4];

}

/* This function calculates the static equations of the model.
 * These equations are only dependent from parameters and constants
 */
void youbot_interaction_control::CalculateStatic (void)
{
	/* CalculateJ\Href0 = eye (4); */
	XXMatrixEye (&m_M[34]);

	/* CalculateJ\p1ref = CalculateJ\Linkdim[1:3,1]; */
	m_M[28].mat[0] = m_M[4].mat[0];
	m_M[28].mat[1] = m_M[4].mat[6];
	m_M[28].mat[2] = m_M[4].mat[12];

	/* CalculateJ\p21 = CalculateJ\Linkdim[1:3,2]; */
	m_M[29].mat[0] = m_M[4].mat[1];
	m_M[29].mat[1] = m_M[4].mat[7];
	m_M[29].mat[2] = m_M[4].mat[13];

	/* CalculateJ\p32 = CalculateJ\Linkdim[1:3,3]; */
	m_M[30].mat[0] = m_M[4].mat[2];
	m_M[30].mat[1] = m_M[4].mat[8];
	m_M[30].mat[2] = m_M[4].mat[14];

	/* CalculateJ\p43 = CalculateJ\Linkdim[1:3,4]; */
	m_M[31].mat[0] = m_M[4].mat[3];
	m_M[31].mat[1] = m_M[4].mat[9];
	m_M[31].mat[2] = m_M[4].mat[15];

	/* CalculateJ\p54 = CalculateJ\Linkdim[1:3,5]; */
	m_M[32].mat[0] = m_M[4].mat[4];
	m_M[32].mat[1] = m_M[4].mat[10];
	m_M[32].mat[2] = m_M[4].mat[16];

	/* CalculateJ\Rtip5 = eye (3); */
	XXMatrixEye (&m_M[27]);

	/* CalculateJ\ptip5 = CalculateJ\Linkdim[1:3,6]; */
	m_M[33].mat[0] = m_M[4].mat[5];
	m_M[33].mat[1] = m_M[4].mat[11];
	m_M[33].mat[2] = m_M[4].mat[17];

	/* CalculateJ\Htip5 = homogeneous (CalculateJ\Rtip5, CalculateJ\ptip5); */
	XXMatrixHomogeneous (&m_M[40], &m_M[27], &m_M[33]);

	/* CalculateJ\uTrzrefref[1:3] = CalculateJ\omegaz; */
	m_M[14].mat[0] = m_M[8].mat[0];
	m_M[14].mat[1] = m_M[8].mat[1];
	m_M[14].mat[2] = m_M[8].mat[2];

	/* CalculateJ\uTrzrefref[4:6] = 0; */
	m_M[14].mat[3] = 0.0;
	m_M[14].mat[4] = 0.0;
	m_M[14].mat[5] = 0.0;

	/* CalculateJ\uTryrefref[1:3] = 0; */
	m_M[15].mat[0] = 0.0;
	m_M[15].mat[1] = 0.0;
	m_M[15].mat[2] = 0.0;

	/* CalculateJ\uTryrefref[4:6] = CalculateJ\vy; */
	m_M[15].mat[3] = m_M[7].mat[0];
	m_M[15].mat[4] = m_M[7].mat[1];
	m_M[15].mat[5] = m_M[7].mat[2];

	/* CalculateJ\uTrxrefref[1:3] = 0; */
	m_M[16].mat[0] = 0.0;
	m_M[16].mat[1] = 0.0;
	m_M[16].mat[2] = 0.0;

	/* CalculateJ\uTrxrefref[4:6] = CalculateJ\vx; */
	m_M[16].mat[3] = m_M[6].mat[0];
	m_M[16].mat[4] = m_M[6].mat[1];
	m_M[16].mat[5] = m_M[6].mat[2];

	/* CalculateJ\uTr1refref[1:3] = CalculateJ\omega1; */
	m_M[17].mat[0] = m_M[9].mat[0];
	m_M[17].mat[1] = m_M[9].mat[1];
	m_M[17].mat[2] = m_M[9].mat[2];

	/* CalculateJ\uTr1refref[4:6] = skew (CalculateJ\Linkdim[1:3,1]) * CalculateJ\omega1; */
	m_M[74].mat[0] = m_M[4].mat[0];
	m_M[74].mat[1] = m_M[4].mat[6];
	m_M[74].mat[2] = m_M[4].mat[12];
	XXMatrixSkew (&m_M[73], &m_M[74]);
	XXMatrixMul (&m_M[72], &m_M[73], &m_M[9]);
	m_M[17].mat[3] = m_M[72].mat[0];
	m_M[17].mat[4] = m_M[72].mat[1];
	m_M[17].mat[5] = m_M[72].mat[2];

	/* CalculateJ\uTr211[1:3] = CalculateJ\omega2; */
	m_M[18].mat[0] = m_M[10].mat[0];
	m_M[18].mat[1] = m_M[10].mat[1];
	m_M[18].mat[2] = m_M[10].mat[2];

	/* CalculateJ\uTr211[4:6] = skew (CalculateJ\Linkdim[1:3,2]) * CalculateJ\omega2; */
	m_M[77].mat[0] = m_M[4].mat[1];
	m_M[77].mat[1] = m_M[4].mat[7];
	m_M[77].mat[2] = m_M[4].mat[13];
	XXMatrixSkew (&m_M[76], &m_M[77]);
	XXMatrixMul (&m_M[75], &m_M[76], &m_M[10]);
	m_M[18].mat[3] = m_M[75].mat[0];
	m_M[18].mat[4] = m_M[75].mat[1];
	m_M[18].mat[5] = m_M[75].mat[2];

	/* CalculateJ\uTr322[1:3] = CalculateJ\omega3; */
	m_M[19].mat[0] = m_M[11].mat[0];
	m_M[19].mat[1] = m_M[11].mat[1];
	m_M[19].mat[2] = m_M[11].mat[2];

	/* CalculateJ\uTr322[4:6] = skew (CalculateJ\Linkdim[1:3,3]) * CalculateJ\omega3; */
	m_M[80].mat[0] = m_M[4].mat[2];
	m_M[80].mat[1] = m_M[4].mat[8];
	m_M[80].mat[2] = m_M[4].mat[14];
	XXMatrixSkew (&m_M[79], &m_M[80]);
	XXMatrixMul (&m_M[78], &m_M[79], &m_M[11]);
	m_M[19].mat[3] = m_M[78].mat[0];
	m_M[19].mat[4] = m_M[78].mat[1];
	m_M[19].mat[5] = m_M[78].mat[2];

	/* CalculateJ\uTr433[1:3] = CalculateJ\omega4; */
	m_M[20].mat[0] = m_M[12].mat[0];
	m_M[20].mat[1] = m_M[12].mat[1];
	m_M[20].mat[2] = m_M[12].mat[2];

	/* CalculateJ\uTr433[4:6] = skew (CalculateJ\Linkdim[1:3,4]) * CalculateJ\omega4; */
	m_M[83].mat[0] = m_M[4].mat[3];
	m_M[83].mat[1] = m_M[4].mat[9];
	m_M[83].mat[2] = m_M[4].mat[15];
	XXMatrixSkew (&m_M[82], &m_M[83]);
	XXMatrixMul (&m_M[81], &m_M[82], &m_M[12]);
	m_M[20].mat[3] = m_M[81].mat[0];
	m_M[20].mat[4] = m_M[81].mat[1];
	m_M[20].mat[5] = m_M[81].mat[2];

	/* CalculateJ\uTr544[1:3] = CalculateJ\omega5; */
	m_M[21].mat[0] = m_M[13].mat[0];
	m_M[21].mat[1] = m_M[13].mat[1];
	m_M[21].mat[2] = m_M[13].mat[2];

	/* CalculateJ\uTr544[4:6] = skew (CalculateJ\Linkdim[1:3,5]) * CalculateJ\omega5; */
	m_M[86].mat[0] = m_M[4].mat[4];
	m_M[86].mat[1] = m_M[4].mat[10];
	m_M[86].mat[2] = m_M[4].mat[16];
	XXMatrixSkew (&m_M[85], &m_M[86]);
	XXMatrixMul (&m_M[84], &m_M[85], &m_M[13]);
	m_M[21].mat[3] = m_M[84].mat[0];
	m_M[21].mat[4] = m_M[84].mat[1];
	m_M[21].mat[5] = m_M[84].mat[2];

	/* CalculateJ\controllableJ[1:6,1] = 0; */
	m_M[1].mat[0] = 0.0;
	m_M[1].mat[8] = 0.0;
	m_M[1].mat[16] = 0.0;
	m_M[1].mat[24] = 0.0;
	m_M[1].mat[32] = 0.0;
	m_M[1].mat[40] = 0.0;

	/* CalculateJ\controllableJ[1:6,2] = 0; */
	m_M[1].mat[1] = 0.0;
	m_M[1].mat[9] = 0.0;
	m_M[1].mat[17] = 0.0;
	m_M[1].mat[25] = 0.0;
	m_M[1].mat[33] = 0.0;
	m_M[1].mat[41] = 0.0;

	/* CalculateJ\controllableJ[1:6,3] = 0; */
	m_M[1].mat[2] = 0.0;
	m_M[1].mat[10] = 0.0;
	m_M[1].mat[18] = 0.0;
	m_M[1].mat[26] = 0.0;
	m_M[1].mat[34] = 0.0;
	m_M[1].mat[42] = 0.0;

	/* CtipControl\Wt[1:3] = 0; */
	m_M[53].mat[0] = 0.0;
	m_M[53].mat[1] = 0.0;
	m_M[53].mat[2] = 0.0;

	/* CtipControl\Wr[4:6] = 0; */
	m_M[52].mat[3] = 0.0;
	m_M[52].mat[4] = 0.0;
	m_M[52].mat[5] = 0.0;

}

/* This function calculates the input equations of the model.
 * These equations are dynamic equations that must not change
 * in calls from the integration method (like random and delay).
 */
void youbot_interaction_control::CalculateInput (void)
{

}

/* This function calculates the dynamic equations of the model.
 * These equations are called from the integration method
 * to calculate the new model rates (that are then integrated).
 */
void youbot_interaction_control::CalculateDynamic (void)
{
	/* C\p.e[1:3] = C\x * C\c; */
	XXMatrixScalarMul (&m_M[87], &m_M[70], m_P[0]);
	m_M[0].mat[0] = m_M[87].mat[0];
	m_M[0].mat[1] = m_M[87].mat[1];
	m_M[0].mat[2] = m_M[87].mat[2];

	/* CalculateJ\controllableJ[1:6,4] = Adjoint (CalculateJ\Href0) * CalculateJ\uTr1refref; */
	XXMatrixAdjoint (&m_M[89], &m_M[34]);
	XXMatrixMul (&m_M[88], &m_M[89], &m_M[17]);
	m_M[1].mat[3] = m_M[88].mat[0];
	m_M[1].mat[11] = m_M[88].mat[1];
	m_M[1].mat[19] = m_M[88].mat[2];
	m_M[1].mat[27] = m_M[88].mat[3];
	m_M[1].mat[35] = m_M[88].mat[4];
	m_M[1].mat[43] = m_M[88].mat[5];

	/* OneJunction2\p4.f = p.f; */
	XXMatrixMov (&m_M[61], &m_M[65]);

	/* Splitter1\input = input; */
	XXMatrixMov (&m_M[63], &m_M[66]);

	/* Gain\xyzrpy = xyzrpy; */
	XXMatrixMov (&m_M[54], &m_M[67]);

	/* Gain\Rz = [cos (Gain\xyzrpy[5]), -sin (Gain\xyzrpy[5]), 0; sin (Gain\xyzrpy[5]), cos (Gain\xyzrpy[5]), 0; 0, 0, 1]; */
	m_M[56].mat[0] = cos (m_M[54].mat[4]);
	m_M[56].mat[1] = -(sin (m_M[54].mat[4]));
	m_M[56].mat[2] = 0.0;
	m_M[56].mat[3] = sin (m_M[54].mat[4]);
	m_M[56].mat[4] = cos (m_M[54].mat[4]);
	m_M[56].mat[5] = 0.0;
	m_M[56].mat[6] = 0.0;
	m_M[56].mat[7] = 0.0;
	m_M[56].mat[8] = 1.0;

	/* Gain\Ry = [cos (Gain\xyzrpy[4]), 0, sin (Gain\xyzrpy[4]); 0, 1, 0; -sin (Gain\xyzrpy[4]), 0, cos (Gain\xyzrpy[4])]; */
	m_M[57].mat[0] = cos (m_M[54].mat[3]);
	m_M[57].mat[1] = 0.0;
	m_M[57].mat[2] = sin (m_M[54].mat[3]);
	m_M[57].mat[3] = 0.0;
	m_M[57].mat[4] = 1.0;
	m_M[57].mat[5] = 0.0;
	m_M[57].mat[6] = -(sin (m_M[54].mat[3]));
	m_M[57].mat[7] = 0.0;
	m_M[57].mat[8] = cos (m_M[54].mat[3]);

	/* Gain\Rx = [1, 0, 0; 0, cos (Gain\xyzrpy[6]), -sin (Gain\xyzrpy[6]); 0, sin (Gain\xyzrpy[6]), cos (Gain\xyzrpy[6])]; */
	m_M[58].mat[0] = 1.0;
	m_M[58].mat[1] = 0.0;
	m_M[58].mat[2] = 0.0;
	m_M[58].mat[3] = 0.0;
	m_M[58].mat[4] = cos (m_M[54].mat[5]);
	m_M[58].mat[5] = -(sin (m_M[54].mat[5]));
	m_M[58].mat[6] = 0.0;
	m_M[58].mat[7] = sin (m_M[54].mat[5]);
	m_M[58].mat[8] = cos (m_M[54].mat[5]);

	/* Gain\H = homogeneous ((Gain\Rz * Gain\Ry) * Gain\Rx, Gain\xyzrpy[1:3]); */
	XXMatrixMul (&m_M[91], &m_M[56], &m_M[57]);
	XXMatrixMul (&m_M[90], &m_M[91], &m_M[58]);
	m_M[92].mat[0] = m_M[54].mat[0];
	m_M[92].mat[1] = m_M[54].mat[1];
	m_M[92].mat[2] = m_M[54].mat[2];
	XXMatrixHomogeneous (&m_M[55], &m_M[90], &m_M[92]);

	/* C\p.e[4:8] = Splitter1\input[4:8] * C\c; */
	m_M[94].mat[0] = m_M[63].mat[3];
	m_M[94].mat[1] = m_M[63].mat[4];
	m_M[94].mat[2] = m_M[63].mat[5];
	m_M[94].mat[3] = m_M[63].mat[6];
	m_M[94].mat[4] = m_M[63].mat[7];
	XXMatrixScalarMul (&m_M[93], &m_M[94], m_P[0]);
	m_M[0].mat[3] = m_M[93].mat[0];
	m_M[0].mat[4] = m_M[93].mat[1];
	m_M[0].mat[5] = m_M[93].mat[2];
	m_M[0].mat[6] = m_M[93].mat[3];
	m_M[0].mat[7] = m_M[93].mat[4];

	/* CalculateJ\R1ref = [cos (-Splitter1\input[4]), -sin (-Splitter1\input[4]), 0; sin (-Splitter1\input[4]), cos (-Splitter1\input[4]), 0; 0, 0, 1]; */
	m_M[22].mat[0] = cos (-m_M[63].mat[3]);
	m_M[22].mat[1] = -(sin (-m_M[63].mat[3]));
	m_M[22].mat[2] = 0.0;
	m_M[22].mat[3] = sin (-m_M[63].mat[3]);
	m_M[22].mat[4] = cos (-m_M[63].mat[3]);
	m_M[22].mat[5] = 0.0;
	m_M[22].mat[6] = 0.0;
	m_M[22].mat[7] = 0.0;
	m_M[22].mat[8] = 1.0;

	/* CalculateJ\H1ref = homogeneous (CalculateJ\R1ref, CalculateJ\p1ref); */
	XXMatrixHomogeneous (&m_M[35], &m_M[22], &m_M[28]);

	/* CalculateJ\R21 = [cos (Splitter1\input[5]), 0, sin (Splitter1\input[5]); 0, 1, 0; -sin (Splitter1\input[5]), 0, cos (Splitter1\input[5])]; */
	m_M[23].mat[0] = cos (m_M[63].mat[4]);
	m_M[23].mat[1] = 0.0;
	m_M[23].mat[2] = sin (m_M[63].mat[4]);
	m_M[23].mat[3] = 0.0;
	m_M[23].mat[4] = 1.0;
	m_M[23].mat[5] = 0.0;
	m_M[23].mat[6] = -(sin (m_M[63].mat[4]));
	m_M[23].mat[7] = 0.0;
	m_M[23].mat[8] = cos (m_M[63].mat[4]);

	/* CalculateJ\H21 = homogeneous (CalculateJ\R21, CalculateJ\p21); */
	XXMatrixHomogeneous (&m_M[36], &m_M[23], &m_M[29]);

	/* CalculateJ\R32 = [cos (-Splitter1\input[6]), 0, sin (-Splitter1\input[6]); 0, 1, 0; -sin (-Splitter1\input[6]), 0, cos (-Splitter1\input[6])]; */
	m_M[24].mat[0] = cos (-m_M[63].mat[5]);
	m_M[24].mat[1] = 0.0;
	m_M[24].mat[2] = sin (-m_M[63].mat[5]);
	m_M[24].mat[3] = 0.0;
	m_M[24].mat[4] = 1.0;
	m_M[24].mat[5] = 0.0;
	m_M[24].mat[6] = -(sin (-m_M[63].mat[5]));
	m_M[24].mat[7] = 0.0;
	m_M[24].mat[8] = cos (-m_M[63].mat[5]);

	/* CalculateJ\H32 = homogeneous (CalculateJ\R32, CalculateJ\p32); */
	XXMatrixHomogeneous (&m_M[37], &m_M[24], &m_M[30]);

	/* CalculateJ\R43 = [cos (Splitter1\input[7]), 0, sin (Splitter1\input[7]); 0, 1, 0; -sin (Splitter1\input[7]), 0, cos (Splitter1\input[7])]; */
	m_M[25].mat[0] = cos (m_M[63].mat[6]);
	m_M[25].mat[1] = 0.0;
	m_M[25].mat[2] = sin (m_M[63].mat[6]);
	m_M[25].mat[3] = 0.0;
	m_M[25].mat[4] = 1.0;
	m_M[25].mat[5] = 0.0;
	m_M[25].mat[6] = -(sin (m_M[63].mat[6]));
	m_M[25].mat[7] = 0.0;
	m_M[25].mat[8] = cos (m_M[63].mat[6]);

	/* CalculateJ\H43 = homogeneous (CalculateJ\R43, CalculateJ\p43); */
	XXMatrixHomogeneous (&m_M[38], &m_M[25], &m_M[31]);

	/* CalculateJ\R54 = [cos (-Splitter1\input[8]), -sin (-Splitter1\input[8]), 0; sin (-Splitter1\input[8]), cos (-Splitter1\input[8]), 0; 0, 0, 1]; */
	m_M[26].mat[0] = cos (-m_M[63].mat[7]);
	m_M[26].mat[1] = -(sin (-m_M[63].mat[7]));
	m_M[26].mat[2] = 0.0;
	m_M[26].mat[3] = sin (-m_M[63].mat[7]);
	m_M[26].mat[4] = cos (-m_M[63].mat[7]);
	m_M[26].mat[5] = 0.0;
	m_M[26].mat[6] = 0.0;
	m_M[26].mat[7] = 0.0;
	m_M[26].mat[8] = 1.0;

	/* CalculateJ\H54 = homogeneous (CalculateJ\R54, CalculateJ\p54); */
	XXMatrixHomogeneous (&m_M[39], &m_M[26], &m_M[32]);

	/* CalculateJ\H10 = CalculateJ\Href0 * CalculateJ\H1ref; */
	XXMatrixMul (&m_M[41], &m_M[34], &m_M[35]);

	/* CalculateJ\H20 = CalculateJ\H10 * CalculateJ\H21; */
	XXMatrixMul (&m_M[42], &m_M[41], &m_M[36]);

	/* CalculateJ\H30 = CalculateJ\H20 * CalculateJ\H32; */
	XXMatrixMul (&m_M[43], &m_M[42], &m_M[37]);

	/* CalculateJ\H40 = CalculateJ\H30 * CalculateJ\H43; */
	XXMatrixMul (&m_M[44], &m_M[43], &m_M[38]);

	/* CalculateJ\H50 = CalculateJ\H40 * CalculateJ\H54; */
	XXMatrixMul (&m_M[45], &m_M[44], &m_M[39]);

	/* CalculateJ\Htip0 = CalculateJ\H50 * CalculateJ\Htip5; */
	XXMatrixMul (&m_M[2], &m_M[45], &m_M[40]);

	/* CalculateJ\controllableJ[1:6,5] = Adjoint (CalculateJ\H10) * CalculateJ\uTr211; */
	XXMatrixAdjoint (&m_M[96], &m_M[41]);
	XXMatrixMul (&m_M[95], &m_M[96], &m_M[18]);
	m_M[1].mat[4] = m_M[95].mat[0];
	m_M[1].mat[12] = m_M[95].mat[1];
	m_M[1].mat[20] = m_M[95].mat[2];
	m_M[1].mat[28] = m_M[95].mat[3];
	m_M[1].mat[36] = m_M[95].mat[4];
	m_M[1].mat[44] = m_M[95].mat[5];

	/* CalculateJ\controllableJ[1:6,6] = Adjoint (CalculateJ\H20) * CalculateJ\uTr322; */
	XXMatrixAdjoint (&m_M[98], &m_M[42]);
	XXMatrixMul (&m_M[97], &m_M[98], &m_M[19]);
	m_M[1].mat[5] = m_M[97].mat[0];
	m_M[1].mat[13] = m_M[97].mat[1];
	m_M[1].mat[21] = m_M[97].mat[2];
	m_M[1].mat[29] = m_M[97].mat[3];
	m_M[1].mat[37] = m_M[97].mat[4];
	m_M[1].mat[45] = m_M[97].mat[5];

	/* CalculateJ\controllableJ[1:6,7] = Adjoint (CalculateJ\H30) * CalculateJ\uTr433; */
	XXMatrixAdjoint (&m_M[100], &m_M[43]);
	XXMatrixMul (&m_M[99], &m_M[100], &m_M[20]);
	m_M[1].mat[6] = m_M[99].mat[0];
	m_M[1].mat[14] = m_M[99].mat[1];
	m_M[1].mat[22] = m_M[99].mat[2];
	m_M[1].mat[30] = m_M[99].mat[3];
	m_M[1].mat[38] = m_M[99].mat[4];
	m_M[1].mat[46] = m_M[99].mat[5];

	/* CalculateJ\controllableJ[1:6,8] = Adjoint (CalculateJ\H40) * CalculateJ\uTr544; */
	XXMatrixAdjoint (&m_M[102], &m_M[44]);
	XXMatrixMul (&m_M[101], &m_M[102], &m_M[21]);
	m_M[1].mat[7] = m_M[101].mat[0];
	m_M[1].mat[15] = m_M[101].mat[1];
	m_M[1].mat[23] = m_M[101].mat[2];
	m_M[1].mat[31] = m_M[101].mat[3];
	m_M[1].mat[39] = m_M[101].mat[4];
	m_M[1].mat[47] = m_M[101].mat[5];

	/* C\x_dot = OneJunction2\p4.f[1:3]; */
	m_M[69].mat[0] = m_M[61].mat[0];
	m_M[69].mat[1] = m_M[61].mat[1];
	m_M[69].mat[2] = m_M[61].mat[2];

	/* R\p.e = R\r * OneJunction2\p4.f; */
	XXScalarMatrixMul (&m_M[62], m_P[41], &m_M[61]);

	/* output = CalculateJ\Htip0; */
	XXMatrixMov (&m_M[68], &m_M[2]);

	/* CtipControl\state = inverse (Gain\H) * CalculateJ\Htip0; */
	XXMatrixInverse (&m_M[103], &m_M[55], m_workarray);
	XXMatrixMul (&m_M[50], &m_M[103], &m_M[2]);

	/* CtipControl\temp = (trace (CtipControl\state[1:3,1:3]) - 1) / 2; */
	m_M[105].mat[0] = m_M[50].mat[0];
	m_M[105].mat[1] = m_M[50].mat[1];
	m_M[105].mat[2] = m_M[50].mat[2];
	m_M[105].mat[3] = m_M[50].mat[4];
	m_M[105].mat[4] = m_M[50].mat[5];
	m_M[105].mat[5] = m_M[50].mat[6];
	m_M[105].mat[6] = m_M[50].mat[8];
	m_M[105].mat[7] = m_M[50].mat[9];
	m_M[105].mat[8] = m_M[50].mat[10];
	m_M[104].mat[0] = XXMatrixTrace (&m_M[105]);
	m_V[444] = (XXMatrixTrace (&m_M[105]) - 1.0) / 2.0;

	/* if (CtipControl\temp < -1) */
	if (m_V[444] < -1.0)
	{
		/* CtipControl\temp = -1; */
		m_V[444] = -1.0;
	}

	/* if (CtipControl\temp > 1) */
	if (m_V[444] > 1.0)
	{
		/* CtipControl\temp = 1; */
		m_V[444] = 1.0;
	}

	/* CtipControl\theta = arccos (CtipControl\temp); */
	m_V[428] = acos (m_V[444]);

	/* if (CtipControl\theta == 0) */
	if (m_V[428] == 0.0)
	{
		/* CtipControl\omega = 0; */
		XXMatrixScalarMov (&m_M[51], 0.0);
	}
	else
	{
		/* CtipControl\omega = (1 / (2 * sin (CtipControl\theta))) * [CtipControl\state[3,2] - CtipControl\state[2,3]; CtipControl\state[1,3] - CtipControl\state[3,1]; CtipControl\state[2,1] - CtipControl\state[1,2]]; */
		m_M[108].mat[0] = m_M[50].mat[9] - m_M[50].mat[6];
		m_M[108].mat[1] = m_M[50].mat[2] - m_M[50].mat[8];
		m_M[108].mat[2] = m_M[50].mat[4] - m_M[50].mat[1];
		XXScalarMatrixMul (&m_M[51], (1.0 / (2.0 * sin (m_V[428]))), &m_M[108]);
	}

	/* CtipControl\Wt[4:6] = CtipControl\state[1:3,4] / CtipControl\CtipControl; */
	m_M[110].mat[0] = m_M[50].mat[3];
	m_M[110].mat[1] = m_M[50].mat[7];
	m_M[110].mat[2] = m_M[50].mat[11];
	XXMatrixScalarDiv (&m_M[109], &m_M[110], m_P[40]);
	m_M[53].mat[3] = m_M[109].mat[0];
	m_M[53].mat[4] = m_M[109].mat[1];
	m_M[53].mat[5] = m_M[109].mat[2];

	/* CtipControl\Wr[1:3] = (CtipControl\theta * CtipControl\omega) / (CtipControl\CtipControl * 5); */
	XXScalarMatrixMul (&m_M[112], m_V[428], &m_M[51]);
	XXMatrixScalarDiv (&m_M[111], &m_M[112], (m_P[40] * 5.0));
	m_M[52].mat[0] = m_M[111].mat[0];
	m_M[52].mat[1] = m_M[111].mat[1];
	m_M[52].mat[2] = m_M[111].mat[2];

	/* CtipControl\p.e = inverse (transpose (Adjoint (Gain\H))) * (CtipControl\Wt + CtipControl\Wr); */
	XXMatrixAdjoint (&m_M[115], &m_M[55]);
	XXMatrixTranspose (&m_M[114], &m_M[115]);
	XXMatrixInverse (&m_M[113], &m_M[114], m_workarray);
	XXMatrixAdd (&m_M[116], &m_M[53], &m_M[52]);
	XXMatrixMul (&m_M[49], &m_M[113], &m_M[116]);

	/* OneJunction\p2.e = -CtipControl\p.e; */
	XXMatrixInv (&m_M[59], &m_M[49]);

	/* ControllableJ\joints.e = transpose (CalculateJ\controllableJ) * OneJunction\p2.e; */
	XXMatrixTranspose (&m_M[117], &m_M[1]);
	XXMatrixMul (&m_M[47], &m_M[117], &m_M[59]);

	/* OneJunction2\p4.e = (ControllableJ\joints.e - R\p.e) - C\p.e; */
	XXMatrixSub (&m_M[118], &m_M[47], &m_M[62]);
	XXMatrixSub (&m_M[60], &m_M[118], &m_M[0]);

	/* p.e = OneJunction2\p4.e; */
	XXMatrixMov (&m_M[64], &m_M[60]);

}

/* This function calculates the output equations of the model.
 * These equations are not needed for calculation of the rates
 * and are kept separate to make the dynamic set of equations smaller.
 * These dynamic equations are called often more than one time for each
 * integration step that is taken. This makes model computation much faster.
 */
void youbot_interaction_control::CalculateOutput (void)
{
	/* ControllableJ\tip.f = CalculateJ\controllableJ * OneJunction2\p4.f; */
	XXMatrixMul (&m_M[48], &m_M[1], &m_M[61]);

	/* CtipControl\stenght = sqrt (transpose (CtipControl\Wt) * CtipControl\Wt); */
	XXMatrixTranspose (&m_M[120], &m_M[53]);
	XXScalarMatrixMatrixMul (m_M[119].mat, &m_M[120], &m_M[53]);
	m_V[445] = sqrt (m_M[119].mat[0]);

}

/* This function calculates the final equations of the model.
 * These equations are calculated after all the calculations
 * are performed
 */
void youbot_interaction_control::CalculateFinal (void)
{

}


